<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
              http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/tx
              http://www.springframework.org/schema/tx/spring-tx.xsd
              http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context.xsd
              http://www.springframework.org/schema/data/jpa
              http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
              http://www.springframework.org/schema/mvc
              http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

       <!-- Activates various annotations to be detected in bean classes -->
       <context:annotation-config />

       <!-- Scans the classpath for annotated components that will be auto-registered as Spring beans.
        For example @Controller and @Service. Make sure to set the correct base-package-->
       <context:component-scan base-package="com.springapp.mvc" />

       <!-- Configures the annotation-driven Spring MVC Controller programming model.
       Note that, with Spring 3.0, this tag works in Servlet MVC only!  -->
       <mvc:annotation-driven />

       <!--@Transaction annotation support -->
       <tx:annotation-driven transaction-manager="transactionManager"/>

       <!-- Need for Repository abstraction -->
       <jpa:repositories base-package="com.springapp.mvc.repository" entity-manager-factory-ref="emf"
                         transaction-manager-ref="transactionManager"/>

       <!--Обеспечивает работу с транзакциями в Spring -->
       <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
              <property name="entityManagerFactory" ref="emf"/>
       </bean>

       <!-- EntityManagerFactory -->
       <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
              <property name="dataSource" ref="dataSource" />
              <!--Поставщик данных - hibernate-->
              <property name="jpaVendorAdapter">
                     <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
              </property>
              <!--поиск сущностей в этом пакете-->
              <property name="packagesToScan"
                        value="com.springapp.mvc"/>
              <!--детали конфигурации поставщика постоянства (hibernate) -->
              <property name="jpaProperties">
                     <props>
                            <prop key="hibernate.dialect">
                                   org.hibernate.dialect.MySQLDialect
                            </prop>
                            <prop key="hibernate.max_fetch_depth">3</prop>
                            <prop key="hibernate.jdbc.fetch_size">50</prop>
                            <prop key="hibernate.jdbc.batch_size">10</prop>
                            <prop key="hibernate.show_sql">true</prop>
                            <prop key="hibernate.hbm2ddl.auto">update</prop>
                     </props>
              </property>
       </bean>

       <!-- Datasource. Источник данных - база MySQL -->
       <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
              <property name="driverClassName" value="com.mysql.jdbc.Driver" />
              <property name="url" value="jdbc:mysql://localhost:3306/mvc_lab_2"/>
              <property name="username" value="root" />
              <property name="password" value="root" />
       </bean>
</beans>